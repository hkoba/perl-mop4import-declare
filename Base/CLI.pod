
=head1 NAME

MOP4Import::Base::CLI - Boilerplate base class for Runnable Module

=head1 SYNOPSIS

F<MyCLI.pm>  (chmod a+x this!).

  #!/usr/bin/env perl
  package MyCLI;
  use MOP4Import::Base::CLI -as_base;
  ...
  __PACKAGE__->run(\@ARGV) unless caller;
  1;

Then from command line:

=for code sh

  % ./MyCLI.pm
  Usage: MyCLI.pm [--opt-value].. <command> [--opt-value].. ARGS...
  
  Commands:
    help
    tables
  
  Options:
    --verbose
    --debug
    --dbname        filename of sqlite3 database
  % 

=head1 DESCRIPTION

MOP4Import::Base::CLI is a
base class for L<Runnable Module|MOP4Import::intro_runnable_module>.
You may prefer 

You can make your module Runnable from CLI by just adding followings:

=for code perl

  use MOP4Import::Base::CLI -as_base;
  ...
  __PACKAGE__->run(\@ARGV) unless caller;


Also, this module is implemented using L<MOP4Import|MOP4Import::Declare>
so that you can implement your own C<import()> pragmas.

=head1 METHODS

=head2 run (\@ARGV)

  MY->run(\@ARGV) unless caller;


This parses minimum posix style options (C<--name> or C<--name=value>)
and create your object with them.
Then C<cmd_...> entry method of
your object will be invoked with first word argument.

=head1 SEE ALSO

L<MOP4Import::Base::CLI_JSON>,
L<MOP4Import::Base::Configure>

=head1 AUTHOR

Kobayashi, Hiroaki E<lt>hkoba@cpan.orgE<gt>

=head1 LICENSE

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut
